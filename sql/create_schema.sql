DROP DATABASE IF EXISTS GENTLE_HEARTS_GAMING;

CREATE DATABASE GENTLE_HEARTS_GAMING;

USE GENTLE_HEARTS_GAMING;

CREATE TABLE TEAM (
    TEAM_ID int AUTO_INCREMENT,
    TEAM_NAME VARCHAR(255) NOT NULL,
    TEAM_WINS int DEFAULT 0 CHECK (TEAM_WINS >= 0),
    TEAM_LOSSES int DEFAULT 0 CHECK (TEAM_LOSSES >= 0),
    PRIMARY KEY (TEAM_ID)
);

CREATE TABLE PLAYER (
	PLYR_ID int AUTO_INCREMENT,
    PLYR_TEAM_ID int,
    PLYR_USERNAME VARCHAR(255) NOT NULL,
    PLYR_POSITION CHAR(3) CHECK(PLYR_POSITION IN ('TOP', 'JNG', 'MID', 'BOT', 'SUP', 'CCH')),
    PRIMARY KEY (PLYR_ID),
    FOREIGN KEY (PLYR_TEAM_ID) REFERENCES TEAM(TEAM_ID)
);

CREATE TABLE GAME (
    GAME_ID int AUTO_INCREMENT,
    GAME_DATETIME DATETIME NOT NULL,
    GAME_LENGTH_SECONDS int,
    PRIMARY KEY (GAME_ID)
);

CREATE TABLE GAME_TEAM_STAT (
    GAME_TEAM_TEAM_ID int,
    GAME_TEAM_GAME_ID int,
    GAME_TEAM_GOLD int NOT NULL CHECK (GAME_TEAM_GOLD >= 0),
    GAME_TEAM_KILLS int NOT NULL CHECK (GAME_TEAM_KILLS >= 0),
    GAME_TEAM_DRAGONS int NOT NULL CHECK (GAME_TEAM_DRAGONS >= 0),
    GAME_TEAM_BARONS int NOT NULL CHECK (GAME_TEAM_BARONS >= 0),
    GAME_TEAM_TOWERS int NOT NULL CHECK (GAME_TEAM_TOWERS >= 0 AND GAME_TEAM_TOWERS <= 11),
    GAME_TEAM_WON BOOLEAN NOT NULL,
    PRIMARY KEY (GAME_TEAM_TEAM_ID, GAME_TEAM_GAME_ID),
	FOREIGN KEY (GAME_TEAM_TEAM_ID) REFERENCES TEAM(TEAM_ID),
    FOREIGN KEY (GAME_TEAM_GAME_ID) REFERENCES GAME(GAME_ID)
);

CREATE TABLE GAME_PLAYER_STAT (
    GAME_PLAYER_PLYR_ID int,
    GAME_PLAYER_GAME_ID int,
    GAME_PLAYER_KILLS int NOT NULL CHECK (GAME_PLAYER_KILLS >= 0),
    GAME_PLAYER_DEATHS int NOT NULL CHECK (GAME_PLAYER_DEATHS >= 0),
    GAME_PLAYER_ASSISTS int NOT NULL CHECK (GAME_PLAYER_ASSISTS >= 0),
    GAME_PLAYER_CS int NOT NULL CHECK (GAME_PLAYER_CS >= 0),
    GAME_PLAYER_CHAMPION VARCHAR(255) NOT NULL,
    GAME_PLAYER_DAMAGE int NOT NULL CHECK (GAME_PLAYER_DAMAGE >= 0),
    GAME_PLAYER_GOLD int NOT NULL CHECK (GAME_PLAYER_GOLD >= 0),
    PRIMARY KEY (GAME_PLAYER_PLYR_ID, GAME_PLAYER_GAME_ID),
    FOREIGN KEY (GAME_PLAYER_PLYR_ID) REFERENCES PLAYER(PLYR_ID),
    FOREIGN KEY (GAME_PLAYER_GAME_ID) REFERENCES GAME(GAME_ID)
);